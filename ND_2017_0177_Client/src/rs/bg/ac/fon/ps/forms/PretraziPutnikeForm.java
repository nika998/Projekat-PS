/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.bg.ac.fon.ps.forms;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import rs.bg.ac.fon.ps.communication.Response;
import rs.bg.ac.fon.ps.controler.Controller;
import rs.bg.ac.fon.ps.domain.GenericEntity;
import rs.bg.ac.fon.ps.domain.impl.KoriscenjeLinija;
import rs.bg.ac.fon.ps.domain.impl.PrisustvoLetu;
import rs.bg.ac.fon.ps.domain.impl.Putnik;
import rs.bg.ac.fon.ps.table.KoriscenjeLinijaTableModel;
import rs.bg.ac.fon.ps.table.PrisustvaTableModel;
import rs.bg.ac.fon.ps.table.PutnikTableModel;

/**
 *
 * @author nikola.dulovic
 */
public class PretraziPutnikeForm extends javax.swing.JDialog {

    private PutnikTableModel passengerTableModel;
    private KoriscenjeLinijaTableModel usedLinesTableModel;
    private PrisustvaTableModel attendancesTableModel;
    private Putnik selectedPassengers;

    public PretraziPutnikeForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSearchInput = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPassengers = new javax.swing.JTable();
        btnLoadPassenger = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAttendances = new javax.swing.JTable();
        btnAddAttendance = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLines = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pretraga putnika");

        jLabel1.setText("                Pretraga naloga putnika:");

        btnSearch.setText("Pretraga");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rezultati pretrage:"));

        tblPassengers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPassengers);

        btnLoadPassenger.setText("Učitaj");
        btnLoadPassenger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadPassengerActionPerformed(evt);
            }
        });

        btnCancel.setText("Izađi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLoadPassenger, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadPassenger)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sva prisustva putnika"));

        tblAttendances.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblAttendances);

        btnAddAttendance.setText("Dodaj prisustvo");
        btnAddAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAttendanceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddAttendance))
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddAttendance)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Sve korišćene linije putnika"));

        tblLines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblLines);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(49, 49, 49)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            passengerTableModel.deleteResults();
            attendancesTableModel.deleteResults();
            usedLinesTableModel.deleteResults();
            btnLoadPassenger.setEnabled(false);
            btnAddAttendance.setEnabled(false);
            
            String searchInput = txtSearchInput.getText();
            
            if (searchInput.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Niste uneli kriterijum pretrage!", "Nepotpuni podaci", JOptionPane.WARNING_MESSAGE);
                return;
            }
            LinkedList<GenericEntity> passengers = new LinkedList<>();
            Response res = Controller.getInstance().searchPassenger(searchInput, passengers);

            if (res.getException() == null) {
                List<Putnik> list1 = (List<Putnik>) res.getResponseObj();
                if (list1.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Nisu pronađeni putnici na osnovu zadatog kriterijuma", "Nema rezultata", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    passengerTableModel = new PutnikTableModel((List<Putnik>) res.getResponseObj());
                    tblPassengers.setModel(passengerTableModel);
                    JOptionPane.showMessageDialog(this, "Sistem je pronašao putnike po zadatoj vrednosti", "Uspešno pretraživanje putnika", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, res.getException().getMessage(), "Neuspešno pretraživanje putnika", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da pronađe putnike po zadatoj vrednosti", "Greška prilikom pretraživanja", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnLoadPassengerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadPassengerActionPerformed
        btnLoadPassenger.setEnabled(false);
        btnAddAttendance.setEnabled(false);
        IzmeniPutnikaForm ipf = new IzmeniPutnikaForm(this, true, selectedPassengers, passengerTableModel, attendancesTableModel, usedLinesTableModel);
        ipf.setVisible(true);
    }//GEN-LAST:event_btnLoadPassengerActionPerformed

    private void btnAddAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAttendanceActionPerformed
        ZapamtiPrisustvoForm ipf = new ZapamtiPrisustvoForm(this, true, selectedPassengers, attendancesTableModel, usedLinesTableModel);
        ipf.setVisible(true);
    }//GEN-LAST:event_btnAddAttendanceActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Da li ste sigurni da želite da napustite stranicu?", "Potvrdite izbor", JOptionPane.YES_NO_OPTION) == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAttendance;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLoadPassenger;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblAttendances;
    private javax.swing.JTable tblLines;
    private javax.swing.JTable tblPassengers;
    private javax.swing.JTextField txtSearchInput;
    // End of variables declaration//GEN-END:variables

    private void init() {
        btnLoadPassenger.setEnabled(false);
        btnAddAttendance.setEnabled(false);

        LinkedList<Putnik> passengers = new LinkedList<>();
        LinkedList<KoriscenjeLinija> lines = new LinkedList<>();
        LinkedList<PrisustvoLetu> attendances = new LinkedList<>();

        passengerTableModel = new PutnikTableModel(passengers);
        attendancesTableModel = new PrisustvaTableModel(attendances);
        usedLinesTableModel = new KoriscenjeLinijaTableModel(lines);

        tblPassengers.setModel(passengerTableModel);
        tblAttendances.setModel(attendancesTableModel);
        tblLines.setModel(usedLinesTableModel);

        tblPassengers.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table = (JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    btnLoadPassenger.setEnabled(true);
                    selectedPassengers = (Putnik) passengerTableModel.getValueAtRow(row);
                    attendancesTableModel.deleteResults();
                    usedLinesTableModel.deleteResults();
                    getUsedLines();
                    getAttendances();
                    btnAddAttendance.setEnabled(true);
                    
                }
            }

        });
    }

    public void getUsedLines() {
        try {

            LinkedList<GenericEntity> usedLines = new LinkedList<>();
            Response res = Controller.getInstance().searchUsedLines(selectedPassengers.getId().toString(), usedLines);

            if (res.getException() == null) {
                usedLinesTableModel = new KoriscenjeLinijaTableModel((List<KoriscenjeLinija>) res.getResponseObj());
                tblLines.setModel(usedLinesTableModel);
            } else {
                JOptionPane.showMessageDialog(this, res.getException().getMessage(), "Neušpesno pretraživanje linija", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da pronađe avio linije po zadatoj vrednosti", "Greška prilikom pretraživanja", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void getAttendances() {
        try {
            LinkedList<GenericEntity> attendances = new LinkedList<>();
            Response res = Controller.getInstance().searchFlightAttendances(selectedPassengers.getId().toString(), attendances);

            if (res.getException() == null) {
                attendancesTableModel = new PrisustvaTableModel((List<PrisustvoLetu>) res.getResponseObj());
                tblAttendances.setModel(attendancesTableModel);
            } else {
                JOptionPane.showMessageDialog(this, res.getException().getMessage(), "Neuspešno pretraživanje prisustva", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da pronađe prisustva po zadatoj vrednosti", "Greška prilikom pretržzivanja", JOptionPane.ERROR_MESSAGE);
        }
    }

}
